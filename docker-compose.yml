
services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    command: #sh -c "daphne -b 0.0.0.0 -p 8000 core.asgi:application"
      sh -c "python manage.py runserver 0.0.0.0:8000"
      #sh -c "gunicorn --bind 0.0.0.0:8000 core.wsgi:application"



    depends_on:
      - database
      - redis

  database:
    image: postgres
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
    command: >
      sh -c "npm run serve"
    environment:
      - NODE_ENV=development

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/static:/django-channels-chat/static
      - ./backend/media:/django-channels-chat/media
    depends_on:
      - app
      - frontend
    command: >
      sh -c "sleep 10 && nginx -g 'daemon off;'"
    #restart: always